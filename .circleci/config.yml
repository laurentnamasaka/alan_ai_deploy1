# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

jobs:
  build_android:    
    docker:
      - image: cirrusci/flutter:1.20.4
    steps:
      - checkout
      - run:
          name: Run Flutter doctor
          command: flutter doctor
      - run:
          name: Build Shrine App Android
          command: cd examples/ShrineApp && flutter build apk 
  build_ios:
    macos:
      xcode: 11.4.0
    steps:
      - checkout
      - run:
          name: decode Certificates
          command: base64 -D -o Certificates.p12 \<<< $Certificates
      - run:
          name: make Provisioning Profiles directory
          command: mkdir -pv ~/Library/MobileDevice/Provisioning\ Profiles/    
      - run:
          name: decode Provisioning Profiles
          command: base64 -D -o ~/Library/MobileDevice/Provisioning\ Profiles/App_Store.mobileprovision \<<< $App_Store_Profile
      - run: bundle exec fastlane clean
      - restore_cache:
          keys: 
            - flutter-cache
      - run:
          name: download flutter SDK
          command: if ! test -f "flutter_sdk.zip"; then curl -o flutter_sdk.zip https://storage.googleapis.com/flutter_infra/releases/stable/macos/flutter_macos_1.22.1-stable.zip; fi
      - run:
          name: unzip flutter SDK
          command: unzip flutter_sdk.zip
      - run:
          name: export flutter path
          command: echo 'export PATH="$PATH:`pwd`/flutter/bin"'  >> $BASH_ENV 
      - run: flutter doctor
      - run: 
          name: Flutter build
          command: cd examples/ShrineApp && flutter build ios 
      - save_cache:
          key: flutter-cache
          paths:
            - flutter_sdk.zip
            - Pods
workflows:
  version: 2.1
  build-android-and-ios:
    jobs:
      - build_android
      - build_ios
